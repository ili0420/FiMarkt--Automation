// <auto-generated />
using System;
using ApiService.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiService.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230619140416_Member_Eklendi")]
    partial class Member_Eklendi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiService.Models.Baller", b =>
                {
                    b.Property<int>("ballerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ballerId"));

                    b.Property<string>("ballerFoot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ballerHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ballerImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ballerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ballerPosition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ballerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ballerValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ballerbirthPlace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ballerbirthTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.HasKey("ballerId");

                    b.HasIndex("countryId");

                    b.ToTable("Baller");
                });

            modelBuilder.Entity("ApiService.Models.BallerPerformance", b =>
                {
                    b.Property<int>("ballerPerformanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ballerPerformanceId"));

                    b.Property<int>("LeagueId")
                        .HasColumnType("int");

                    b.Property<int>("assist")
                        .HasColumnType("int");

                    b.Property<int>("ballerId")
                        .HasColumnType("int");

                    b.Property<int>("cleanSheet")
                        .HasColumnType("int");

                    b.Property<int>("endYear")
                        .HasColumnType("int");

                    b.Property<int>("goal")
                        .HasColumnType("int");

                    b.Property<int>("goalConceded")
                        .HasColumnType("int");

                    b.Property<int>("redCard")
                        .HasColumnType("int");

                    b.Property<int>("startYear")
                        .HasColumnType("int");

                    b.Property<int>("time")
                        .HasColumnType("int");

                    b.Property<int>("totalMatchNumber")
                        .HasColumnType("int");

                    b.Property<int>("yellowCard")
                        .HasColumnType("int");

                    b.HasKey("ballerPerformanceId");

                    b.HasIndex("LeagueId");

                    b.HasIndex("ballerId");

                    b.ToTable("BallerPerformance");
                });

            modelBuilder.Entity("ApiService.Models.BallerTeam", b =>
                {
                    b.Property<int>("ballerTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ballerTeamId"));

                    b.Property<int>("ballerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("contractEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("contractStartTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("shirtNumber")
                        .HasColumnType("int");

                    b.Property<int>("teamId")
                        .HasColumnType("int");

                    b.HasKey("ballerTeamId");

                    b.HasIndex("ballerId");

                    b.HasIndex("teamId");

                    b.ToTable("BallerTeam");
                });

            modelBuilder.Entity("ApiService.Models.Country", b =>
                {
                    b.Property<int>("countryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("countryId"));

                    b.Property<string>("countryImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("countryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("countryId");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("ApiService.Models.League", b =>
                {
                    b.Property<int>("leagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("leagueId"));

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("cupImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("leagueImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("leagueName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("leagueId");

                    b.HasIndex("countryId");

                    b.ToTable("League");
                });

            modelBuilder.Entity("ApiService.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("MemberCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MemberStartYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberagainPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("ApiService.Models.Team", b =>
                {
                    b.Property<int>("teamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teamId"));

                    b.Property<int>("countryId")
                        .HasColumnType("int");

                    b.Property<string>("teamImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("teamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("teamStadiumCapacity")
                        .HasColumnType("int");

                    b.Property<string>("teamStadiumName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("teamId");

                    b.HasIndex("countryId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("ApiService.Models.TeamLeague", b =>
                {
                    b.Property<int>("teamLeagueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teamLeagueId"));

                    b.Property<int>("endYear")
                        .HasColumnType("int");

                    b.Property<int>("leagueId")
                        .HasColumnType("int");

                    b.Property<int>("startYear")
                        .HasColumnType("int");

                    b.Property<int>("teamId")
                        .HasColumnType("int");

                    b.HasKey("teamLeagueId");

                    b.HasIndex("leagueId");

                    b.HasIndex("teamId");

                    b.ToTable("TeamLeague");
                });

            modelBuilder.Entity("ApiService.Models.TeamLeagueWinner", b =>
                {
                    b.Property<int>("teamLeagueWinnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("teamLeagueWinnerId"));

                    b.Property<int>("endYear")
                        .HasColumnType("int");

                    b.Property<int>("leagueId")
                        .HasColumnType("int");

                    b.Property<int>("startYear")
                        .HasColumnType("int");

                    b.Property<int>("teamId")
                        .HasColumnType("int");

                    b.HasKey("teamLeagueWinnerId");

                    b.HasIndex("leagueId");

                    b.HasIndex("teamId");

                    b.ToTable("teamLeagueWinners");
                });

            modelBuilder.Entity("ApiService.Models.Users", b =>
                {
                    b.Property<int>("usersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("usersId"));

                    b.Property<string>("usersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usersPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usersId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiService.Models.Baller", b =>
                {
                    b.HasOne("ApiService.Models.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("ApiService.Models.BallerPerformance", b =>
                {
                    b.HasOne("ApiService.Models.League", "league")
                        .WithMany()
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiService.Models.Baller", "baller")
                        .WithMany()
                        .HasForeignKey("ballerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("baller");

                    b.Navigation("league");
                });

            modelBuilder.Entity("ApiService.Models.BallerTeam", b =>
                {
                    b.HasOne("ApiService.Models.Baller", "baller")
                        .WithMany()
                        .HasForeignKey("ballerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiService.Models.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("baller");

                    b.Navigation("team");
                });

            modelBuilder.Entity("ApiService.Models.League", b =>
                {
                    b.HasOne("ApiService.Models.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("ApiService.Models.Team", b =>
                {
                    b.HasOne("ApiService.Models.Country", "country")
                        .WithMany()
                        .HasForeignKey("countryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("ApiService.Models.TeamLeague", b =>
                {
                    b.HasOne("ApiService.Models.League", "league")
                        .WithMany()
                        .HasForeignKey("leagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiService.Models.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("league");

                    b.Navigation("team");
                });

            modelBuilder.Entity("ApiService.Models.TeamLeagueWinner", b =>
                {
                    b.HasOne("ApiService.Models.League", "league")
                        .WithMany()
                        .HasForeignKey("leagueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiService.Models.Team", "team")
                        .WithMany()
                        .HasForeignKey("teamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("league");

                    b.Navigation("team");
                });
#pragma warning restore 612, 618
        }
    }
}
